version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: autocare360-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-autocare360}
      MYSQL_USER: ${DB_USERNAME:-autocare360user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-autocare360pass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docs/database:/docker-entrypoint-initdb.d
    networks:
      - autocare360-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autocare360-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILE:-dev}
      DB_URL: jdbc:mysql://mysql:3306/${DB_NAME:-autocare360}?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      DB_USERNAME: ${DB_USERNAME:-autocare360user}
      DB_PASSWORD: ${DB_PASSWORD:-autocare360pass}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - autocare360-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis (for caching and session management - optional)
  redis:
    image: redis:7-alpine
    container_name: autocare360-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - autocare360-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  autocare360-network:
    driver: bridge
